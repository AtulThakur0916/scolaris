{{!-- Flash Messages --}}


<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <div class="row g-6">
            <div class="col-md-12">
                <div class="card">

                    <h5 class="card-header">Edit Class</h5>

                    <div class="card-body">
                        {{#if messages.success}}
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            {{messages.success}}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                        {{/if}}

                        {{#if messages.error}}
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            {{messages.error}}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                        {{/if}}
                        <form action="/classes/update/{{classData.id}}" method="post">

                            <!-- Class Name -->
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="class_name" class="form-label">Class Name</label>
                                    <input type="text" class="form-control {{#if errors.name}}is-invalid{{/if}}"
                                        placeholder="Enter Class Name" name="name" value="{{classData.name}}"
                                        required />
                                    {{#if errors.name}}
                                    <div class="invalid-feedback">{{errors.name.msg}}</div>
                                    {{/if}}
                                </div>

                                <!-- School Selection -->
                                <div class="col-md-6">
                                    <label for="schoolSelect" class="form-label">School</label>
                                    <select class="form-control {{#if errors.school_id}}is-invalid{{/if}}"
                                        id="schoolSelect" name="school_id" required>
                                        <option value="" disabled>Select School</option>
                                        {{#each schools}}
                                        <option value="{{id}}" {{#ifEquals ../classData.school_id
                                            id}}selected{{/ifEquals}}>
                                            {{name}}
                                        </option>
                                        {{/each}}
                                    </select>
                                    {{#if errors.school_id}}
                                    <div class="invalid-feedback">{{errors.school_id.msg}}</div>
                                    {{/if}}
                                </div>
                            </div>

                            <!-- Status -->
                            <div class="row mt-2">
                                <div class="col-md-6">
                                    <label for="school_sessions_id" class="form-label">School Session</label>
                                    <select class="form-control {{#if errors.school_sessions_id}}is-invalid{{/if}}"
                                        name="school_sessions_id" id="sessionSelect">
                                        <option value="" disabled>Select School Session</option>
                                        {{#each formattedSessions}}
                                        <option value="{{id}}" {{#ifEquals ../classData.school_sessions_id
                                            id}}selected{{/ifEquals}}>
                                            {{start_date}} - {{end_date}}
                                        </option>
                                        {{/each}}
                                    </select>
                                    {{#if errors.school_sessions_id}}
                                    <div class="invalid-feedback">{{errors.school_sessions_id.msg}}</div>
                                    {{/if}}
                                </div>
                                <div class="col-md-6">
                                    <label for="status" class="form-label">Status</label>
                                    <select class="form-control" name="status">
                                        <option value="1" {{#if classData.status}}selected{{/if}}>Active</option>
                                        <option value="0" {{#unless classData.status}}selected{{/unless}}>Inactive
                                        </option>
                                    </select>
                                </div>
                            </div>

                            <!-- Submit & Cancel Buttons -->
                            <button type="submit" class="mt-4 float-end btn btn-primary">
                                Update Class
                            </button>
                            <a href="/classes/index" class="mt-4 float-end btn btn-secondary me-2">Cancel</a>

                        </form>
                    </div> <!-- card-body -->

                </div> <!-- card -->
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const schoolSelect = document.getElementById("schoolSelect");
        const classSelect = document.getElementById("classSelect");

        schoolSelect.addEventListener("change", async function () {
            const schoolId = this.value;

            classSelect.innerHTML = `<option value="" disabled selected>Loading...</option>`;

            if (schoolId) {
                try {
                    const response = await fetch(`/school/class/${schoolId}`);
                    const data = await response.json();

                    if (data.classes && data.classes.length > 0) {
                        classSelect.innerHTML = `<option value="" disabled selected>Select Class</option>`;
                        data.classes.forEach(cls => {
                            classSelect.innerHTML += `<option value="${cls.id}">${cls.name}</option>`;
                        });
                    } else {
                        classSelect.innerHTML = `<option value="" disabled>No classes available</option>`;
                    }
                } catch (error) {
                    console.error("Error fetching classes:", error);
                    classSelect.innerHTML = `<option value="" disabled>Error loading classes</option>`;
                }
            } else {
                classSelect.innerHTML = `<option value="" disabled selected>Select Class</option>`;
            }
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        const schoolSelect = document.getElementById("schoolSelect");
        const sessionSelect = document.getElementById("sessionSelect");

        schoolSelect.addEventListener("change", async function () {
            const schoolId = this.value;
            sessionSelect.innerHTML = `<option value="" disabled selected>Loading...</option>`;

            if (schoolId) {
                try {
                    const response = await fetch(`/school/session/${schoolId}`);
                    const data = await response.json();

                    if (data.session && data.session.length > 0) {
                        sessionSelect.innerHTML = `<option value="" disabled selected>Select Session</option>`;
                        data.session.forEach(session => {
                            const startDate = new Date(session.start_date);
                            const endDate = new Date(session.end_date);

                            const monthNames = [
                                "January", "February", "March", "April", "May", "June",
                                "July", "August", "September", "October", "November", "December"
                            ];

                            const formattedStart = `${monthNames[startDate.getMonth()]} ${startDate.getFullYear()}`;
                            const formattedEnd = `${monthNames[endDate.getMonth()]} ${endDate.getFullYear()}`;

                            sessionSelect.innerHTML += `<option value="${session.id}">${formattedStart} - ${formattedEnd}</option>`;
                        });
                    } else {
                        sessionSelect.innerHTML = `<option value="" disabled>No sessions available</option>`;
                    }
                } catch (error) {
                    console.error("Error fetching sessions:", error);
                    sessionSelect.innerHTML = `<option value="" disabled>Error loading sessions</option>`;
                }
            } else {
                sessionSelect.innerHTML = `<option value="" disabled selected>Select Session</option>`;
            }
        });
    });
</script>