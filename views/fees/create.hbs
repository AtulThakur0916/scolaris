{{!-- Debug information --}}
<div style="display: none;">
  Debug Info:
  hasStudent: {{debug.hasStudent}}
  studentId: {{debug.studentId}}
</div>
<script>
  // Add this at the beginning of your file to make feeData available in JavaScript
  const feeData = {{{json feeData}}};
  console.log('Fee Data:', feeData);
</script>
<div class="content-wrapper">
  <div class="container-xxl flex-grow-1 container-p-y">
    <div class="row g-6">
      <div class="col-md-12">
        <div class="card">
          {{#if messages.error}}
          <div class="alert alert-danger">
            {{messages.error}}
          </div>
          {{/if}}

          {{#if messages.success}}
          <div class="alert alert-success">
            {{messages.success}}
          </div>
          {{/if}}

          <h5 class="card-header">Create Fee</h5>

          <div class="card-body">
            <form action="/fees/create" method="post">
              <div class="row">
                <div class="col-md-6">
                  <label for="school_id" class="form-label">School</label>
                  <select class="form-control {{#if errors.school_id}}is-invalid{{/if}}" name="school_id"
                    id="schoolSelect">
                    <option value="" disabled selected>Select School</option>
                    {{#each schools}}
                    <option value="{{id}}">{{name}}</option>
                    {{/each}}
                  </select>
                  {{#if errors.school_id}}
                  <div class="invalid-feedback">{{errors.school_id.msg}}</div>
                  {{/if}}
                </div>
                <div class="col-md-6">
                  <label for="session_id" class="form-label">School Session</label>
                  <select class="form-control {{#if errors.school_sessions_id}}is-invalid{{/if}}"
                    name="school_sessions_id" id="sessionSelect">
                    <option value="" disabled selected>Select Session</option>
                  </select>
                  {{#if errors.school_sessions_id}}
                  <div class="invalid-feedback">{{errors.school_sessions_id.msg}}</div>
                  {{/if}}
                </div>

              </div>

              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="class_id" class="form-label">Class</label>
                  <select class="form-control {{#if errors.class_id}}is-invalid{{/if}}" name="class_id"
                    id="classSelect">
                    <option value="" disabled selected>Select Class</option>
                  </select>
                  {{#if errors.class_id}}
                  <div class="invalid-feedback">{{errors.class_id.msg}}</div>
                  {{/if}}
                </div>
                <div class="col-md-6">
                  <label for="fees_type_id" class="form-label">Fee Type</label>
                  <select class="form-control {{#if errors.fees_type_id}}is-invalid{{/if}}" name="fees_type_id"
                    id="fees_type_id">
                    <option value="" disabled selected>Select Fee Type</option>
                    {{#each fees_type}}
                    <option value="{{id}}">{{name}}</option>
                    {{/each}}
                  </select>
                  {{#if errors.fees_type_id}}
                  <div class="invalid-feedback">{{errors.fees_type_id.msg}}</div>
                  {{/if}}
                </div>


              </div>

              <div class="row mt-2">
                <div class="col-md-6" id="customFeeContainer" style="display: none;">
                  <label for="custom_fee_name" class="form-label">Custom Fee Name</label>
                  <input type="text" class="form-control {{#if errors.custom_fee_name}}is-invalid{{/if}}"
                    name="custom_fee_name" />
                  {{#if errors.custom_fee_name}}
                  <div class="invalid-feedback">{{errors.custom_fee_name.msg}}</div>
                  {{/if}}
                </div>
                <div class="col-md-6">
                  <label for="amount" class="form-label">Amount</label>
                  <input type="number" class="form-control {{#if errors.amount}}is-invalid{{/if}}" name="amount"
                    step="0.01" required />
                  {{#if errors.amount}}
                  <div class="invalid-feedback">{{errors.amount.msg}}</div>
                  {{/if}}
                </div>


              </div>

              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="frequency" class="form-label">Frequency</label>
                  <select class="form-control {{#if errors.frequency}}is-invalid{{/if}}" name="frequency">
                    <option value="" disabled selected>Select Frequency</option>
                    <option value="Monthly">Monthly</option>
                    <option value="Quarterly">Quarterly</option>
                    {{!-- <option value="Annually">Annually</option> --}}
                    <option value="One-Time">One-Time</option>
                  </select>
                  {{#if errors.frequency}}
                  <div class="invalid-feedback">{{errors.frequency.msg}}</div>
                  {{/if}}
                </div>
                <div class="col-md-6">
                  <label for="description" class="form-label">Description (Optional)</label>
                  <textarea class="form-control {{#if errors.description}}is-invalid{{/if}}"
                    name="description"></textarea>
                  {{#if errors.description}}
                  <div class="invalid-feedback">{{errors.description.msg}}</div>
                  {{/if}}
                </div>
              </div>

              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="status" class="form-label">Status</label>
                  <select class="form-control {{#if errors.status}}is-invalid{{/if}}" name="status">
                    <option value="1">Active</option>
                    <option value="0">Inactive</option>
                  </select>
                  {{#if errors.status}}
                  <div class="invalid-feedback">{{errors.status.msg}}</div>
                  {{/if}}
                </div>
              </div>

              <div class="mt-4">
                <button type="submit" class="btn btn-primary float-end">Save Fee</button>
                <a href="/fees/index" class="btn btn-secondary float-end me-2">Cancel</a>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script>
  // session
  document.addEventListener("DOMContentLoaded", function () {
    const schoolSelect = document.getElementById("schoolSelect");
    const sessionSelect = document.getElementById("sessionSelect");

    schoolSelect.addEventListener("change", async function () {
      const schoolId = this.value;

      // Clear previous classes
      sessionSelect.innerHTML = `<option value="" disabled selected>Loading...</option>`;

      if (schoolId) {
        try {
          const response = await fetch(`/school/session/${schoolId}`);
          const data = await response.json();

          if (data.session && data.session.length > 0) {
            sessionSelect.innerHTML = `<option value="" disabled selected>Select Session</option>`;

            data.session.forEach(cls => {
              const startDate = new Date(cls.start_date);
              const endDate = new Date(cls.end_date);

              const formattedStart = startDate.toLocaleDateString('en-GB', { month: 'short', year: 'numeric' });
              const formattedEnd = endDate.toLocaleDateString('en-GB', { month: 'short', year: 'numeric' });

              sessionSelect.innerHTML += `<option value="${cls.id}">${formattedStart} - ${formattedEnd}</option>`;
            });
          } else {
            sessionSelect.innerHTML = `<option value="" disabled>No sessions available</option>`;
          }
        } catch (error) {
          console.error("Error fetching sessions:", error);
          sessionSelect.innerHTML = `<option value="" disabled>Error loading sessions</option>`;
        }
      } else {
        sessionSelect.innerHTML = `<option value="" disabled selected>Select Session</option>`;
      }
    });
  });


  document.addEventListener("DOMContentLoaded", async function () {
    const schoolSelect = document.getElementById("schoolSelect");
    const sessionSelect = document.getElementById("sessionSelect");
    const classSelect = document.getElementById("classSelect");
    const feesTypeSelect = document.getElementById("fees_type_id");
    const customFeeInput = document.querySelector('input[name="custom_fee_name"]');
    const amountInput = document.querySelector('input[name="amount"]');
    const frequencySelect = document.querySelector('select[name="frequency"]');
    const descriptionTextarea = document.querySelector('textarea[name="description"]');
    const statusSelect = document.querySelector('select[name="status"]');

    // Set initial values if feeData exists
    if (feeData) {
      // Set simple fields
      if (feeData.custom_fee_name) customFeeInput.value = feeData.custom_fee_name;
      if (feeData.amount) amountInput.value = feeData.amount;
      if (feeData.description) descriptionTextarea.value = feeData.description;
      if (feeData.status) statusSelect.value = feeData.status;
      
      // Set school and trigger change event
      if (feeData.school_id) {
        schoolSelect.value = feeData.school_id;
        const event = new Event('change');
        schoolSelect.dispatchEvent(event);
        
        // Wait for sessions to load then set session
        setTimeout(() => {
          if (feeData.school_sessions_id) {
            sessionSelect.value = feeData.school_sessions_id;
            sessionSelect.dispatchEvent(new Event('change'));
            
            // Wait for classes to load then set class
            setTimeout(() => {
              if (feeData.class_id) {
                classSelect.value = feeData.class_id;
              }
            }, 500);
          }
        }, 500);
      }

      // Set fee type
      if (feeData.fees_type_id) {
        feesTypeSelect.value = feeData.fees_type_id;
      }

      // Set frequency
      if (feeData.frequency) {
        frequencySelect.value = feeData.frequency;
      }
    }
  });
  sessionSelect.addEventListener("change", async function () {
    const schoolSessionsId = this.value;

    // Clear previous classes
    classSelect.innerHTML = `<option value="" disabled selected>Loading...</option>`;

    if (schoolSessionsId) {
      try {
        const response = await fetch(`/school/class/${schoolSessionsId}`);
        const data = await response.json();

        if (data.classes && data.classes.length > 0) {
          classSelect.innerHTML = `<option value="" disabled selected>Select Class</option>`;
          data.classes.forEach(cls => {
            classSelect.innerHTML += `<option value="${cls.id}">${cls.name}</option>`;
          });

          // Set class value if exists in feeData
          if (feeData && feeData.class_id) {
            classSelect.value = feeData.class_id;
          }
        } else {
          classSelect.innerHTML = `<option value="" disabled>No classes available</option>`;
        }
      } catch (error) {
        console.error("Error fetching classes:", error);
        classSelect.innerHTML = `<option value="" disabled>Error loading classes</option>`;
      }
    } else {
      classSelect.innerHTML = `<option value="" disabled selected>Select Class</option>`;
    }
  });
</script>