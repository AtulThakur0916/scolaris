{{!-- Flash Messages --}}
{{#if messages.success}}
<div class="alert alert-success">{{messages.success}}</div>
{{/if}}
{{#if messages.error}}
<div class="alert alert-danger">{{messages.error}}</div>
{{/if}}


{{#if messages.error}}
<div class="alert alert-danger">{{messages.error}}</div>
{{/if}}

<div class="content-wrapper">
  <div class="container-xxl flex-grow-1 container-p-y">
    <div class="row g-6">
      <div class="col-md-12">
        <div class="card">

          <h5 class="card-header">Create School</h5>

          <div class="card-body">
            <form action="/schools/create" method="post" enctype="multipart/form-data">

              {{!-- School Name --}}
              <div class="row">
                <div class="col-md-6">
                  <label for="name" class="form-label">School Name</label>
                  <input type="text" max="20" class="form-control {{#if errors.name}}is-invalid{{/if}}"
                    placeholder="Enter school name" name="name" value="{{lookup schoolData 'name'}}" required />
                  {{#if errors.name}}
                  <div class="invalid-feedback">{{errors.name.msg}}</div>
                  {{/if}}
                </div>

                {{!-- School Type --}}
                <div class="col-md-6">
                  <label for="type" class="form-label">School Type</label>
                  <select class="form-control {{#if errors.type}}is-invalid{{/if}}" name="type" required>
                    <option value="">Select Type</option>
                    <option value="Primary" {{#ifEquals schoolData.type "Primary" }}selected{{/ifEquals}}>Primary
                    </option>
                    <option value="Secondary" {{#ifEquals schoolData.type "Secondary" }}selected{{/ifEquals}}>Secondary
                    </option>
                    <option value="High School" {{#ifEquals schoolData.type "High School" }}selected{{/ifEquals}}>High
                      School</option>
                    <option value="University" {{#ifEquals schoolData.type "University" }}selected{{/ifEquals}}>
                      University</option>
                  </select>
                  {{#if errors.type}}
                  <div class="invalid-feedback">{{errors.type.msg}}</div>
                  {{/if}}
                </div>
              </div>

              {{!-- Contact Details --}}
              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="phone_number" class="form-label">Phone Number</label>
                  <input type="tel" class="form-control {{#if errors.phone_number}}is-invalid{{/if}}"
                    placeholder="Enter phone number" name="phone_number" value="{{lookup schoolData 'phone_number'}}"
                    required />
                  {{#if errors.phone_number}}
                  <div class="invalid-feedback">{{errors.phone_number.msg}}</div>
                  {{/if}}
                </div>

                <div class="col-md-6">
                  <label for="email" class="form-label">Email</label>
                  <input type="email" class="form-control {{#if errors.email}}is-invalid{{/if}}"
                    placeholder="Enter school email" name="email" value="{{lookup schoolData 'email'}}" required />
                  {{#if errors.email}}
                  <div class="invalid-feedback">{{errors.email.msg}}</div>
                  {{/if}}
                </div>
              </div>

              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="country" class="form-label">Country</label>
                  <input type="text" name="country" class="form-control {{#if errors.country}}is-invalid{{/if}}"
                    value="côte d'Ivoire" readonly />
                  {{!-- <input type="hidden" name="country" id="countryInput" required> --}}

                </div>
                <div class="col-md-6">
                  <label for="state" class="form-label">Region</label>
                  <input type="text" class="form-control {{#if errors.state}}is-invalid{{/if}}" name="state"
                    value="{{lookup schoolData 'state'}}" />
                  {{#if errors.state}}
                  <div class="invalid-feedback">{{errors.state.msg}}</div>
                  {{/if}}
                </div>

              </div>
              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="city" class="form-label">Town</label>
                  <input type="text" class="form-control {{#if errors.city}}is-invalid{{/if}}" name="city"
                    value="{{lookup schoolData 'city'}}" />
                  {{#if errors.city}}
                  <div class="invalid-feedback">{{errors.city.msg}}</div>
                  {{/if}}
                </div>
                <div class="col-md-6">
                  <label for="location" class="form-label">Address</label>
                  <input type="text" class="form-control {{#if errors.location}}is-invalid{{/if}}" name="location"
                    value="{{lookup schoolData 'location'}}" />
                  {{#if errors.location}}
                  <div class="invalid-feedback">{{errors.location.msg}}</div>
                  {{/if}}
                </div>

              </div>
              <div class="row mt-2">

                <div class="col-md-6">
                  <label for="logo" class="form-label">School Logo (Only PNG, JPG, JPEG, and GIF files are allowed and
                    Max Size is 5mb)</label>
                  <input type="file" class="form-control {{#if errors.logo}}is-invalid{{/if}}"
                    value="{{lookup schoolData 'logo'}}" name="logo" accept="image/*" />
                  {{#if errors.logo}}
                  <div class="invalid-feedback">{{errors.logo.msg}}</div>
                  {{/if}}

                </div>

                <div class="col-md-6">
                  <label for="school_doc" class="form-label">Document Upload (Accepted formats: JPG,
                    PNG, PDF – Max size
                    5MB)</label>
                  <input type="file" value="{{lookup schoolData 'school_doc'}}"
                    class="form-control {{#if errors.school_doc}}is-invalid{{/if}}" name="school_doc" />
                  {{#if errors.school_doc}}
                  <div class="invalid-feedback">{{errors.school_doc.msg}}</div>
                  {{/if}}

                </div>
              </div>
              {{!-- Submit & Cancel Buttons --}}
              <button type="submit" class="mt-4 float-end btn btn-primary">Create School</button>
              <a href="/schools/index" class="mt-4 float-end btn btn-secondary me-2">Cancel</a>
            </form>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const dropdownButton = document.getElementById("countryDropdown");
    const dropdownMenu = document.getElementById("countryDropdownMenu");
    const selectedCountryName = document.getElementById("selectedCountryName");
    const selectedCountryFlag = document.getElementById("selectedCountryFlag");
    const countryInput = document.getElementById("countryInput");
    const countrySearch = document.getElementById("countrySearch");

    // Set default country on load if already selected
    const preselectedCountry = "{{studentData.country}}";
    if (preselectedCountry) {
      const selectedOption = dropdownMenu.querySelector(`[data-code="${preselectedCountry}"]`);
      if (selectedOption) {
        selectedCountryName.textContent = selectedOption.textContent.trim();
        selectedCountryFlag.src = selectedOption.getAttribute("data-flag");
        selectedCountryFlag.style.display = "inline";
        countryInput.value = preselectedCountry;
      }
    }

    // Handle click on dropdown options
    dropdownMenu.addEventListener("click", (e) => {
      e.preventDefault();
      const clickedOption = e.target.closest(".country-option");

      if (clickedOption) {
        const countryCode = clickedOption.getAttribute("data-code");
        const countryFlag = clickedOption.getAttribute("data-flag");
        const countryName = clickedOption.textContent.trim();

        selectedCountryName.textContent = countryName;
        selectedCountryFlag.src = countryFlag;
        selectedCountryFlag.style.display = "inline";
        countryInput.value = countryCode;
      }
    });

    // Search countries in dropdown
    countrySearch.addEventListener("input", () => {
      const searchValue = countrySearch.value.toLowerCase();
      const options = dropdownMenu.querySelectorAll(".country-option");

      options.forEach((option) => {
        const countryName = option.textContent.trim().toLowerCase();
        option.closest("li").style.display = countryName.includes(searchValue) ? "" : "none";
      });
    });
  });
</script>