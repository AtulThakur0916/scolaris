{{!-- Student Form --}}
<div class="content-wrapper">
  <div class="container-xxl flex-grow-1 container-p-y">
    <div class="row g-6">
      <div class="col-md-12">
        <div class="card">
          {{#if messages.error}}
          <div class="alert alert-danger">{{messages.error}}</div>
          {{/if}}

          {{#if messages.success}}
          <div class="alert alert-success">{{messages.success}}</div>
          {{/if}}

          <h5 class="card-header">Create Student</h5>
          <div class="card-body">
            <form action="/students/create" method="post">
              <div class="row">
                <div class="col-md-6">
                  <label for="name" class="form-label">Name</label>
                  <input type="text" class="form-control {{#if errors.name}}is-invalid{{/if}}" name="name"
                    value="{{lookup studentData 'name'}}" />
                  {{#if errors.name}}
                  <div class="invalid-feedback">{{errors.name.msg}}</div>
                  {{/if}}
                </div>

                <div class="col-md-6">
                  <label for="email" class="form-label">Email address</label>
                  <input type="email" class="form-control {{#if errors.email}}is-invalid{{/if}}" name="email"
                    value="{{lookup studentData 'email'}}" />
                  {{#if errors.email}}
                  <div class="invalid-feedback">{{errors.email.msg}}</div>
                  {{/if}}
                </div>
              </div>

              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="age" class="form-label">Age</label>
                  <input type="number" class="form-control {{#if errors.age}}is-invalid{{/if}}" name="age"
                    value="{{lookup studentData 'age'}}" />
                  {{#if errors.age}}
                  <div class="invalid-feedback">{{errors.age.msg}}</div>
                  {{/if}}
                </div>

                <div class="col-md-6">
                  <label for="school_id" class="form-label">School</label>
                  <select class="form-control {{#if errors.school_id}}is-invalid{{/if}}" name="school_id"
                    id="schoolSelect">
                    <option value="" disabled selected>Select School</option>
                    {{#each schools}}
                    <option value="{{id}}" {{#ifEquals ../studentData.school_id id}}selected{{/ifEquals}}>{{name}}
                    </option>
                    {{/each}}
                  </select>
                  {{#if errors.school_id}}
                  <div class="invalid-feedback">{{errors.school_id.msg}}</div>
                  {{/if}}
                </div>
              </div>

              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="session_id" class="form-label">School Session</label>
                  <select class="form-control {{#if errors.school_sessions_id}}is-invalid{{/if}}"
                    name="school_sessions_id" id="sessionSelect">
                    <option value="" disabled selected>Select Session</option>
                  </select>
                  {{#if errors.school_sessions_id}}
                  <div class="invalid-feedback">{{errors.school_sessions_id.msg}}</div>
                  {{/if}}
                </div>
                <div class="col-md-6">
                  <label for="class_id" class="form-label">Class</label>
                  <select class="form-control {{#if errors.class_id}}is-invalid{{/if}}" name="class_id"
                    id="classSelect">
                    <option value="" disabled selected>Select Class</option>
                  </select>
                  {{#if errors.class_id}}
                  <div class="invalid-feedback">{{errors.class_id.msg}}</div>
                  {{/if}}
                </div>
              </div>

              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="country" class="form-label">Country</label>
                  <div class="dropdown">
                    <!-- Dropdown Button -->
                    <button class="btn btn-light dropdown-toggle w-100" type="button" id="countryDropdown"
                      data-bs-toggle="dropdown" aria-expanded="false">
                      <img id="selectedCountryFlag" src="" alt="Flag"
                        style="width: 20px; height: auto; margin-right: 5px; display: none;">
                      <span id="selectedCountryName">Select Country</span>
                    </button>

                    <!-- Dropdown Menu -->
                    <ul class="dropdown-menu w-100" aria-labelledby="countryDropdown" id="countryDropdownMenu"
                      style="max-height: 200px; overflow-y: auto;">

                      <!-- Search Input -->
                      <li class="p-2">
                        <input type="text" class="form-control" id="countrySearch" placeholder="Search Country...">
                      </li>

                      <!-- Country List -->
                      {{#each countries}}
                      <li>
                        <a class="dropdown-item d-flex align-items-center country-option" href="#" data-code="{{code}}"
                          data-flag="{{flag}}">
                          <img src="{{flag}}" alt="{{name}}" style="width: 20px; height: auto; margin-right: 10px;">
                          {{name}}
                        </a>
                      </li>
                      {{/each}}
                    </ul>
                  </div>
                  <input type="hidden" name="country" id="countryInput" required>

                </div>
                <div class="col-md-6">
                  <label for="state" class="form-label">State</label>
                  <input type="text" class="form-control {{#if errors.state}}is-invalid{{/if}}" name="state"
                    value="{{lookup studentData 'state'}}" />
                  {{#if errors.state}}
                  <div class="invalid-feedback">{{errors.state.msg}}</div>
                  {{/if}}
                </div>

              </div>
              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="city" class="form-label">City</label>
                  <input type="text" class="form-control {{#if errors.city}}is-invalid{{/if}}" name="city"
                    value="{{lookup studentData 'city'}}" />
                  {{#if errors.city}}
                  <div class="invalid-feedback">{{errors.city.msg}}</div>
                  {{/if}}
                </div>
                <div class="col-md-6">
                  <label for="address" class="form-label">Address</label>
                  <input type="text" class="form-control {{#if errors.address}}is-invalid{{/if}}" name="address"
                    value="{{lookup studentData 'address'}}" />
                  {{#if errors.address}}
                  <div class="invalid-feedback">{{errors.address.msg}}</div>
                  {{/if}}
                </div>

              </div>
              <div class="row mt-2">
                <div class="col-md-6">
                  <label for="roll_number" class="form-label">Roll Number</label>
                  <input type="number" class="form-control {{#if errors.roll_number}}is-invalid{{/if}}"
                    name="roll_number" value="{{lookup studentData 'roll_number'}}" />
                  {{#if errors.roll_number}}
                  <div class="invalid-feedback">{{errors.roll_number.msg}}</div>
                  {{/if}}
                </div>
              </div>
              <div class="m-4">
                <button type="submit" class="btn btn-primary float-end">Save Student</button>
                <a href="/students/index" class="btn btn-secondary float-end me-2">Cancel</a>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const sessionSelect = document.getElementById("sessionSelect");
    const classSelect = document.getElementById("classSelect");

    sessionSelect.addEventListener("change", async function () {
      const schoolSessionsId = this.value;

      // Clear previous classes
      classSelect.innerHTML = `<option value="" disabled selected>Loading...</option>`;

      if (schoolSessionsId) {
        try {
          const response = await fetch(`/school/class/${schoolSessionsId}`);
          const data = await response.json();

          if (data.classes && data.classes.length > 0) {
            classSelect.innerHTML = `<option value="" disabled selected>Select Class</option>`;
            data.classes.forEach(cls => {
              classSelect.innerHTML += `<option value="${cls.id}">${cls.name}</option>`;
            });
          } else {
            classSelect.innerHTML = `<option value="" disabled>No classes available</option>`;
          }
        } catch (error) {
          console.error("Error fetching classes:", error);
          classSelect.innerHTML = `<option value="" disabled>Error loading classes</option>`;
        }
      } else {
        classSelect.innerHTML = `<option value="" disabled selected>Select Class</option>`;
      }
    });
  });

  // session
  document.addEventListener("DOMContentLoaded", function () {
    const schoolSelect = document.getElementById("schoolSelect");
    const sessionSelect = document.getElementById("sessionSelect");

    schoolSelect.addEventListener("change", async function () {
      const schoolId = this.value;

      // Clear previous classes
      sessionSelect.innerHTML = `<option value="" disabled selected>Loading...</option>`;

      if (schoolId) {
        try {
          const response = await fetch(`/school/session/${schoolId}`);
          const data = await response.json();

          if (data.session && data.session.length > 0) {
            sessionSelect.innerHTML = `<option value="" disabled selected>Select Session</option>`;

            data.session.forEach(cls => {
              const startDate = new Date(cls.start_date);
              const endDate = new Date(cls.end_date);

              const formattedStart = startDate.toLocaleDateString('en-GB', { month: 'short', year: 'numeric' });
              const formattedEnd = endDate.toLocaleDateString('en-GB', { month: 'short', year: 'numeric' });

              sessionSelect.innerHTML += `<option value="${cls.id}">${formattedStart} - ${formattedEnd}</option>`;
            });
          } else {
            sessionSelect.innerHTML = `<option value="" disabled>No sessions available</option>`;
          }
        } catch (error) {
          console.error("Error fetching sessions:", error);
          sessionSelect.innerHTML = `<option value="" disabled>Error loading sessions</option>`;
        }
      } else {
        sessionSelect.innerHTML = `<option value="" disabled selected>Select Session</option>`;
      }
    });
  });

  document.addEventListener("DOMContentLoaded", function () {
    const dropdownButton = document.getElementById("countryDropdown");
    const dropdownMenu = document.getElementById("countryDropdownMenu");
    const selectedCountryName = document.getElementById("selectedCountryName");
    const selectedCountryFlag = document.getElementById("selectedCountryFlag");
    const countryInput = document.getElementById("countryInput");
    const countrySearch = document.getElementById("countrySearch");

    // Set default country on load if already selected
    const preselectedCountry = "{{studentData.country}}";
    if (preselectedCountry) {
      const selectedOption = dropdownMenu.querySelector(`[data-code="${preselectedCountry}"]`);
      if (selectedOption) {
        selectedCountryName.textContent = selectedOption.textContent.trim();
        selectedCountryFlag.src = selectedOption.getAttribute("data-flag");
        selectedCountryFlag.style.display = "inline";
        countryInput.value = preselectedCountry;
      }
    }

    // Handle click on dropdown options
    dropdownMenu.addEventListener("click", (e) => {
      e.preventDefault();
      const clickedOption = e.target.closest(".country-option");

      if (clickedOption) {
        const countryCode = clickedOption.getAttribute("data-code");
        const countryFlag = clickedOption.getAttribute("data-flag");
        const countryName = clickedOption.textContent.trim();

        selectedCountryName.textContent = countryName;
        selectedCountryFlag.src = countryFlag;
        selectedCountryFlag.style.display = "inline";
        countryInput.value = countryCode;
      }
    });

    // Search countries in dropdown
    countrySearch.addEventListener("input", () => {
      const searchValue = countrySearch.value.toLowerCase();
      const options = dropdownMenu.querySelectorAll(".country-option");

      options.forEach((option) => {
        const countryName = option.textContent.trim().toLowerCase();
        option.closest("li").style.display = countryName.includes(searchValue) ? "" : "none";
      });
    });
  });


</script>